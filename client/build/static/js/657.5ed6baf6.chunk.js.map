{"version":3,"file":"static/js/657.5ed6baf6.chunk.js","mappings":"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","sources":["store/routing/selectors.ts","hooks/useActions.ts","components/organisms/Routing/RoutingInformation.tsx","pages/Routing/index.tsx"],"sourcesContent":["import {RootState} from \"../index\"\n\nconst clientsAndOrders = (state:RootState) => state.routing.client\n\nexport const routing = {\n    clientsAndOrders,\n}\n\n","import { bindActionCreators } from \"@reduxjs/toolkit\"\nimport { routingService } from \"store/routing/routingService\"\n\nimport { useAppDispatch } from \"../store\"\n\nconst actions = {\n   ...routingService,\n}\n\nexport const useActions = () => {\n   const dispatch = useAppDispatch()\n\n   return bindActionCreators(actions, dispatch)\n}\n","//@ts-nocheck\nimport React, { useEffect, useState } from \"react\"\n\nimport { useActions } from \"hooks/useActions\"\n\nimport {routing} from \"store/routing/selectors\";\nimport {useAppDispatch, useAppSelector} from \"store\";\nimport {filterOrders} from \"store/routing/routingSlice\";\n\nimport { Input, InputMath, Button } from \"components/atoms\"\nimport { ShipmentCart } from \"components/molecules\"\nimport { Search, SettingsTwo } from \"assets/icons\"\nimport { RoutingT } from \"./type\"\n\nimport \"./style.scss\"\n\nconst RoutingInformation: React.FC<RoutingT> = ({ currentCartId, setCurrentId, currentId }) => {\n   const [search, setSearch] = useState(\"\")\n   const [weight, setWeight] = useState(\"\")\n   const [volume, setVolume] = useState(\"\")\n   const dispatch = useAppDispatch()\n\n   const {filteredData,data} = useAppSelector(routing.clientsAndOrders)\n   const { getClientsWithRoutingOrders } = useActions()\n\n   useEffect(() => {\n      getClientsWithRoutingOrders()\n   }, [])\n\n   const filter = () => {\n      if(weight || volume){\n         dispatch(filterOrders({weight,volume,data}))\n      }\n   }\n\n   return (\n      <div className=\"routing_information-block\">\n         <div className=\"routing_information-block_search\">\n            <Input\n               onChange={(e: any) => setSearch(e.target.value)}\n               placeholder=\"Search...\"\n               value={search}\n               iconLeft={<Search />}\n               iconRight={<SettingsTwo />}\n            />\n         </div>\n         <div className=\"routing_information-block_vehicle-profile\">\n            <h5>Vehicle Profile</h5>\n            <div className=\"routing_information-block_vehicle-profile_inputs\">\n               <InputMath\n                  onChange={(e: any) => setWeight(e.target.value)}\n                  placeholder=\"0.000\"\n                  type=\"number\"\n                  value={weight}\n                  label=\"weight\"\n                  math=\"kg\"\n               />\n               <InputMath\n                  onChange={(e: any) => setVolume(e.target.value)}\n                  placeholder=\"0.000\"\n                  type=\"number\"\n                  value={volume}\n                  label=\"volume\"\n                  math=\"m\"\n               />\n            </div>\n            <Button size=\"medium\" onClickCallBack={() => filter()}>\n               Find Routes\n            </Button>\n         </div>\n         <div className=\"routing_information-block_overview\">\n            <h5>Overview</h5>\n            <div className=\"routing_information-block_overview_shipments\">\n               {filteredData?.map((data, index) => (\n                  <ShipmentCart\n                     key={index}\n                     clientName={data.name}\n                     clientSurname={data.surname}\n                     to={data.order[0].location.to}\n                     from={data.order[0].location.from}\n                     shipmentType={data.order[0].shipmentType}\n                     shipmentNumber={data.order[0].shipmentNumber}\n                     isActive={currentCartId === data._id || currentId === data._id}\n                     setCurrentId={() => setCurrentId(data._id)}\n                  />\n               ))}\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default RoutingInformation\n","import React, { useEffect, useState } from \"react\"\n\nimport {useAppSelector} from \"store\";\nimport {routing} from \"store/routing/selectors\";\n\nimport { RoutingInformation } from \"components/organisms\"\nimport { GoogleMapBlock } from \"components/molecules\"\n\nimport \"./style.scss\"\n\nconst Routing: React.FC = () => {\n   const [windowOpenId, setWindowOpenId] = useState(0)\n   const [currentId, setCurrentId] = useState(0)\n   const [directions, setDirections] = useState(null)\n\n   const {data} = useAppSelector(routing.clientsAndOrders)\n   const handleMarkerMouseOver = (id: number) => {\n      setWindowOpenId(id)\n   }\n\n   const handleMarkerMouseOut = (id: number) => {\n      setWindowOpenId(id)\n   }\n\n   useEffect(() => {\n      if (currentId) {\n         const directionsService = new window.google.maps.DirectionsService()\n\n         // @ts-ignore\n         const currentOrder = data?.find((item) => item._id === currentId)\n         const from = { lat: currentOrder?.order[0].location.from.lat, lng: currentOrder?.order[0].location.from.lng }\n         const to = { lat: currentOrder?.order[0].location.to.lat, lng: currentOrder?.order[0].location.to.lng }\n\n         directionsService.route(\n            {\n               // @ts-ignore\n               origin: from,\n\n               // @ts-ignore\n               destination: to,\n               travelMode: google.maps.TravelMode.DRIVING,\n            },\n            (response, status) => {\n               if (status === \"OK\") {\n                  // @ts-ignore\n                  setDirections(response)\n               } else {\n                  console.error(`Directions request failed with status: ${status}`)\n               }\n            },\n         )\n      }\n   }, [currentId])\n\n   return (\n      <div className=\"routing\">\n         <RoutingInformation currentCartId={windowOpenId} currentId={currentId} setCurrentId={setCurrentId} />\n         {data && <GoogleMapBlock\n             orders={data}\n             windowOpenId={windowOpenId}\n             handleMarkerMouseOver={handleMarkerMouseOver}\n             handleMarkerMouseOut={handleMarkerMouseOut}\n             centerCordinats={{ lat: 40.18835040814713, lng: 44.52188208695554 }}\n             directions={directions}\n         /> }\n\n      </div>\n   )\n}\n\nexport default Routing\n"],"names":["routing","state","client","actions","_objectSpread","routingService","_ref","currentCartId","setCurrentId","currentId","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","weight","setWeight","_useState5","_useState6","volume","setVolume","dispatch","useAppDispatch","_useAppSelector","useAppSelector","filteredData","data","_useActions","bindActionCreators","useActions","getClientsWithRoutingOrders","useEffect","_jsxs","className","children","_jsx","Input","onChange","e","target","value","placeholder","iconLeft","Search","iconRight","SettingsTwo","InputMath","type","label","math","Button","size","onClickCallBack","filterOrders","map","index","ShipmentCart","clientName","name","clientSurname","surname","to","order","location","from","shipmentType","shipmentNumber","isActive","_id","windowOpenId","setWindowOpenId","directions","setDirections","directionsService","window","google","maps","DirectionsService","currentOrder","find","item","lat","lng","route","origin","destination","travelMode","TravelMode","DRIVING","response","status","console","error","concat","RoutingInformation","GoogleMapBlock","orders","handleMarkerMouseOver","id","handleMarkerMouseOut","centerCordinats"],"sourceRoot":""}